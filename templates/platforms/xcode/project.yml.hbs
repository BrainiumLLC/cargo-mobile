name: {{app.name}}
options:
  bundleIdPrefix: {{reverse-domain app.domain}}
  deploymentTarget:
    iOS: {{apple.ios-version}}
    macOS: {{apple.macos-version}}
fileGroups: [{{join file-groups}}]
configs:
  debug: debug
  release: release
settingGroups:
  app:
    base:
      PRODUCT_NAME: {{app.name}}
      PRODUCT_BUNDLE_IDENTIFIER: {{reverse-domain app.domain}}.{{app.name}}
      DEVELOPMENT_TEAM: {{apple.development-team}}
targetTemplates:
  app:
    type: application
    sources:
      - path: Sources
    scheme:
      environmentVariables:
        RUST_BACKTRACE: full
        RUST_LOG: info
    settings:
      groups: [app]
targets:
  {{app.name}}_iOS:
    type: application
    platform: iOS
    sources:
      - path: Sources
      - path: {{app.asset-dir}}
        buildPhase: resources
        type: folder
      {{~#each asset-catalogs}}
      - {{prefix-path this}}{{/each}}
      {{~#each ios-additional-targets}}
      - path: {{prefix-path this}}{{/each}}
    info:
      path: {{app.name}}_iOS/Info.plist
      properties:
        LSRequiresIPhoneOS: true
        UILaunchStoryboardName: LaunchScreen
        UIRequiredDeviceCapabilities: [arm64, metal]
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        UISupportedInterfaceOrientations~ipad:
          - UIInterfaceOrientationPortrait
          - UIInterfaceOrientationPortraitUpsideDown
          - UIInterfaceOrientationLandscapeLeft
          - UIInterfaceOrientationLandscapeRight
        CFBundleShortVersionString: {{apple.bundle-version-short}}
        CFBundleVersion: {{apple.bundle-version}}
        {{~#each apple.plist-pairs}}
        {{this.key}}: {{this.value}}{{/each}}
    scheme:
      environmentVariables:
        RUST_BACKTRACE: full
        RUST_LOG: info
    settings:
      base:
        ENABLE_BITCODE: false
        ARCHS: [arm64, x86_64] # rustc doesn't support arm64e yet
        VALID_ARCHS: arm64 x86_64 # rustc doesn't support arm64e yet
        LIBRARY_SEARCH_PATHS[sdk=iphoneos*]: $(inherited) "{{prefix-path "target/aarch64-apple-ios/$(CONFIGURATION)"}}"
        LIBRARY_SEARCH_PATHS[sdk=iphonesimulator*]: $(inherited) "{{prefix-path "target/x86_64-apple-ios/$(CONFIGURATION)"}}"
      groups: [app]
    dependencies:
      - target: lib_{{app.name}}_iOS
        embed: false
        link: false
      - framework: lib{{snake-case app.name}}.a
        embed: false
      {{~#each ios-vendor-frameworks}}
      - framework: {{prefix-path this}}{{/each}}
      {{~#each ios-vendor-sdks}}
      - sdk: {{prefix-path this}}{{/each}}
      - sdk: CoreGraphics.framework
      - sdk: Metal.framework
      - sdk: MetalKit.framework
      - sdk: QuartzCore.framework
      - sdk: Security.framework
      - sdk: UIKit.framework
      {{~#each ios-frameworks}}
      - sdk: {{this}}.framework{{/each}}
    {{~#if ios-pre-build-scripts}}
    preBuildScripts:
      {{~#each ios-pre-build-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if~}}
    {{~#if ios-post-compile-scripts}}
    postCompileScripts:
      {{~#each ios-post-compile-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if~}}
    {{~#if ios-post-build-scripts}}
    postBuildScripts:
      {{~#each ios-post-build-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if}}
  {{app.name}}_macOS:
    type: application
    platform: macOS
    sources: Sources
      {{~#each macos-additional-targets}}
      - path: {{prefix-path this}}{{/each}}
    info:
      path: {{app.name}}_macOS/Info.plist
      properties:
        NSHighResolutionCapable: true
    scheme:
      environmentVariables:
        RUST_BACKTRACE: full
        RUST_LOG: info
    settings:
      base:
        LIBRARY_SEARCH_PATHS: $(inherited) "{{prefix-path "target/x86_64-apple-darwin/$(CONFIGURATION)"}}"
      groups: [app]
    dependencies:
      - target: lib_{{app.name}}_macOS
        embed: false
        link: false
      - framework: lib{{snake-case app.name}}.a
        embed: false
      {{~#each macos-vendor-frameworks}}
      - framework: {{prefix-path this}}{{/each}}
      {{~#each macos-vendor-sdks}}
      - sdk: {{prefix-path this}}{{/each}}
      - sdk: Metal.framework
      {{~#each macos-frameworks}}
      - sdk: {{this}}.framework{{/each}}
    {{~#if macos-pre-build-scripts}}
    preBuildScripts:
      {{~#each macos-pre-build-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if~}}
    {{#if macos-post-compile-scripts}}
    postCompileScripts:
      {{~#each macos-post-compile-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if~}}
    {{#if macos-post-build-scripts}}
    postBuildScripts:
      {{~#each macos-post-build-scripts}}{{#if this.path}}
      - path {{this.path}}{{/if}}{{#if this.script}}
      - script: {{this.script}}{{/if}}{{#if this.name}}
        name: {{this.name}}{{/if}}{{#if this.input-files}}
        inputFiles: {{~#each this.input-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-files}}
        outputFiles: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.input-file-lists}}
        inputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.output-file-lists}}
        outputFileLists: {{~#each this.output-files}}
          - {{this}}{{/each}}{{/if}}{{#if this.shell}}
        shell: {{this.shell}}{{/if}}{{#if this.show-env-vars}}
        showEnvVars: {{this.show_env_vars}}{{/if}}{{#if this.run-only-when-installing}}
        runOnlyWhenInstalling: {{this.run-only-when-installing}}{{/if}}{{#if this.based-on-dependency-analysis}}
        basedOnDependencyAnalysis: {{this.based-on-dependency-analysis}}{{/if}}{{#if this.discovered-dependency-file}}
        discoveredDependencyFile: {{this.discovered-dependency-file}}{{/if}}
      {{~/each~}}
    {{~/if}}
  lib_{{app.name}}_iOS:
    type: ""
    platform: iOS
    settings:
      ENABLE_BITCODE: false
      ARCHS: [arm64, x86_64] # rustc doesn't support arm64e yet
      VALID_ARCHS: arm64 x86_64 # rustc doesn't support arm64e yet
    legacy:
      toolPath: ${HOME}/.cargo/bin/cargo-apple
      arguments: xcode-script -v --platform ${PLATFORM_DISPLAY_NAME:?} --sdk-root ${SDKROOT:?} --configuration ${CONFIGURATION:?} ${FORCE_COLOR} ${ARCHS:?}
      passSettings: false # prevents evil linker errors
      workingDirectory: $(SRCROOT)/..
  lib_{{app.name}}_macOS:
    type: ""
    platform: macOS
    legacy:
      toolPath: ${HOME}/.cargo/bin/cargo-apple
      arguments: xcode-script -v --platform ${PLATFORM_DISPLAY_NAME:?} --sdk-root ${SDKROOT:?} --configuration ${CONFIGURATION:?} ${FORCE_COLOR} ${ARCHS:?}
      passSettings: false
      workingDirectory: $(SRCROOT)/..
